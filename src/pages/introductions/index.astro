---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Base from '../../layouts/Base.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../../consts';
import { IconCalendarEvent, IconUser } from '@tabler/icons-react';
import { convertPDF } from '../../convertPDF';
import appRoot from 'app-root-path';

const introduction = (await getCollection('introductions')).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf(),
);
---

<Base title={`Introduction | ${SITE_TITLE}`} description={SITE_DESCRIPTION}>
  <div class="mx-auto max-w-screen-lg px-4 py-8">
    <h1 class="mb-8 text-4xl font-bold">Introduction</h1>

    <div class="grid grid-cols-1 gap-4 md:grid-cols-3">
      {
        introduction.map(async (post) => {
          const canvases = post.data.pdf
            ? await convertPDF(appRoot.resolve(post.data.pdf), true)
            : null;
          return (
            <introduction class="flex flex-col overflow-hidden rounded-2xl bg-white shadow-md transition-colors hover:text-tut-red">
              <a href={`/introduction/${post.slug}`}>
                {post.data.image ? (
                  <Image
                    src={post.data.image.src}
                    alt={post.data.image.alt}
                    width={720}
                    class="aspect-video object-cover"
                  />
                ) : canvases ? (
                  <img
                    src={canvases[0].toDataURL('image/webp')}
                    class="aspect-video object-cover"
                  />
                ) : (
                  <div class="flex aspect-video items-center justify-center bg-gray-400 text-center text-2xl text-gray-200">
                    No Image
                  </div>
                )}
              </a>
              <a href={`/introduction/${post.slug}`}>
                <div class="flex-grow p-4">
                  <h2 class="mb-4 text-2xl font-bold">{post.data.title}</h2>
                  <div class="mb-2 flex gap-1 text-gray-500">
                    <IconCalendarEvent />
                    <time datetime={post.data.date.toISOString()}>
                      {post.data.date.toLocaleDateString('ja', {
                        year: 'numeric',
                        month: 'numeric',
                        day: 'numeric',
                        weekday: 'short',
                      })}
                    </time>
                  </div>
                  <div class="flex gap-1 text-gray-500">
                    <IconUser />
                    {post.data.author}
                  </div>
                </div>
              </a>
            </introduction>
          );
        })
      }
    </div>
  </div>
</Base>
